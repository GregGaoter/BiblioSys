package com.dsi.bibliosys.biblioback.mapper;

import org.springframework.stereotype.Component;

import com.dsi.bibliosys.biblioback.data.dto.UsagerDto;
import com.dsi.bibliosys.biblioback.data.entity.Usager;
import com.dsi.bibliosys.biblioback.service.AdresseService;
import com.dsi.bibliosys.biblioback.service.IdentifiantService;

@Component
public class UsagerMapper extends AbstractMapper implements Mapper<Usager, UsagerDto> {

	private IdentifiantService identifiantService;
	private AdresseService adresseService;

	public UsagerMapper(IdentifiantService identifiantService, AdresseService adresseService) {
		this.identifiantService = identifiantService;
		this.adresseService = adresseService;
	}

	@Override
	public UsagerDto mapToDto(Usager usager) {
		return modelMapper.map(usager, UsagerDto.class);
	}

	@Override
	public Usager mapToEntity(UsagerDto usagerDto) {
//		modelMapper.typeMap(UsagerDto.class, Usager.class).addMappings(mapper -> {
//			mapper.<String>map(src -> src.getPrenom(), (dest, v) -> dest.setPrenom(v));
//			mapper.<String>map(src -> src.getNom(), (dest, v) -> dest.setNom(v));
//			mapper.<LocalDateTime>map(src -> src.getDateNaissance(), (dest, v) -> dest.setDateNaissance(v));
//			mapper.<Integer>map(src -> src.getIdentifiantId(),
//					(dest, v) -> dest.setIdentifiant(identifiantService.findById(v)));
//			mapper.<Integer>map(src -> src.getAdresseId(), (dest, v) -> dest.setAdresse(adresseService.findById(v)));
//		});
//		return modelMapper.map(usagerDto, Usager.class);
		Usager usager = new Usager();
		usager.setPrenom(usagerDto.getPrenom());
		usager.setNom(usagerDto.getNom());
		usager.setDateNaissance(usagerDto.getDateNaissance());
		usager.setIdentifiant(identifiantService.findById(usagerDto.getIdentifiantId()));
		usager.setAdresse(adresseService.findById(usagerDto.getAdresseId()));
		return usager;
	}

}
