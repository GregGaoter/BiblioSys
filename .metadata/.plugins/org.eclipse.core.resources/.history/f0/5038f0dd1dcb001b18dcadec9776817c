package com.dsi.bibliosys.biblioback.service;

import static com.dsi.bibliosys.biblioback.repository.specification.GenreSpecification.rayonIdEqual;
import static com.dsi.bibliosys.biblioback.repository.specification.LivreSpecification.genreIdEqual;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Service;

import com.dsi.bibliosys.biblioback.data.entity.Auteur;
import com.dsi.bibliosys.biblioback.data.entity.Genre;
import com.dsi.bibliosys.biblioback.data.entity.Livre;
import com.dsi.bibliosys.biblioback.repository.AuteurRepository;

/**
 * Classe fournissant les services de l'entit√© business Auteur.
 */
@Service
public class AuteurService implements CrudService<Auteur, Integer> {

	private final AuteurRepository auteurRepository;

	@Autowired
	public AuteurService(AuteurRepository auteurRepository) {
		this.auteurRepository = auteurRepository;
	}

	@Override
	public JpaRepository<Auteur, Integer> getRepository() {
		return auteurRepository;
	}

	@Override
	public Auteur create() {
		return new Auteur();
	}
	
	public List<Auteur> findByLivreId(Integer id) {
		List<Genre> genres = genreRepository.findAll(rayonIdEqual(id));
		return genres.stream().flatMap(genre -> findAll(genreIdEqual(genre.getId())).stream())
				.collect(Collectors.toList());
	}

}
