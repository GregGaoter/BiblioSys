package com.dsi.bibliosys.biblioback.controller;

import static org.mockito.BDDMockito.given;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.reactive.server.WebTestClient;
import org.springframework.test.web.servlet.MockMvc;

import com.dsi.bibliosys.biblioback.data.entity.Usager;
import com.dsi.bibliosys.biblioback.service.entity.UsagerService;

@ExtendWith(SpringExtension.class)
@WebMvcTest
//@SpringBootTest
public class UsagerControllerTest {

	@Autowired
	private static WebTestClient wtc;
	@Autowired
	private UsagerController usagerController;
	//@Autowired
    //private MockMvc mvc;

	@MockBean
	private UsagerService usagerService;

	@BeforeAll
	public static void setUp() {
		wtc = WebTestClient.bindToController(usagerController).build();
	}

	@Test
	public void getUsager_returnUsager() throws Exception {
		//Usager usager = new Usager();
		//given(usagerService.create()).willReturn(usager);
		wtc.get().uri("/usager").exchange().expectStatus().isOk().expectHeader()
				.contentType(MediaType.APPLICATION_JSON);
		//mvc.perform(get("/usager").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isOk());
	}

}
