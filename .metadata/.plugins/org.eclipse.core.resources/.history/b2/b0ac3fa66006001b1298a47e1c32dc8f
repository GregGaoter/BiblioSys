package com.dsi.bibliosys.biblioback.controller;

import static org.hamcrest.Matchers.arrayContainingInAnyOrder;
import static org.hamcrest.Matchers.hasSize;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

import com.dsi.bibliosys.biblioback.service.InscriptionService;
import com.dsi.bibliosys.biblioback.service.entity.AdresseService;
import com.dsi.bibliosys.biblioback.service.entity.IdentifiantService;
import com.dsi.bibliosys.biblioback.service.entity.LieuService;
import com.dsi.bibliosys.biblioback.service.entity.UsagerService;

@ExtendWith(SpringExtension.class)
@WebMvcTest(InscriptionController.class)
//@SpringBootTest
public class InscriptionControllerTest {

	@Autowired
	private MockMvc mvc;

	@MockBean
	private UsagerService usagerService;
	@MockBean
	private IdentifiantService identifiantService;
	@MockBean
	private AdresseService adresseService;
	@MockBean
	private LieuService lieuService;
	@MockBean
	private InscriptionService inscriptionService;

	@Test
	public void getInscriptionEntities_returnJsonArray() throws Exception {
		mvc.perform(get("/public/inscription").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isOk())
				.andExpect(jsonPath("$[*]", hasSize(4)))
				.andExpect(jsonPath("$[*]", arrayContainingInAnyOrder("Usager", "Identifiant", "Adresse", "Lieu")));
	}

}
