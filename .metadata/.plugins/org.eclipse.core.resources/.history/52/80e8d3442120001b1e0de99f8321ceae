package com.dsi.bibliosys.biblioback.mapper;

import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.dsi.bibliosys.biblioback.data.dto.UsagerDto;
import com.dsi.bibliosys.biblioback.data.entity.Usager;
import com.dsi.bibliosys.biblioback.service.AdresseService;
import com.dsi.bibliosys.biblioback.service.IdentifiantService;

@Component
public class UsagerMapper extends AbstractMapper implements Mapper<Usager, UsagerDto> {

	@Autowired
	private IdentifiantService identifiantService;
	@Autowired
	private AdresseService adresseService;

	@Override
	public UsagerDto mapToDto(Usager usager) {
		return modelMapper.map(usager, UsagerDto.class);
	}

	@Override
	public Usager mapToEntity(UsagerDto usagerDto) {
		modelMapper.typeMap(UsagerDto.class, Usager.class).addMappings(mapper -> {
			mapper.<String>map(src -> src.getPrenom(), (dest, v) -> dest.setPrenom(v));
			mapper.<String>map(src -> src.getNom(), (dest, v) -> dest.setNom(v));
			mapper.<LocalDateTime>map(src -> src.getDateNaissance(), (dest, v) -> dest.setDateNaissance(v));
			mapper.<Integer>map(src -> src.getIdentifiantId(),
					(dest, v) -> dest.setIdentifiant(identifiantService.findById(v)));
			mapper.<Integer>map(src -> src.getAdresseId(), (dest, v) -> dest.setAdresse(adresseService.findById(v)));
		});
		return modelMapper.map(usagerDto, Usager.class);
	}

}
