package com.dsi.bibliosys.biblioback.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.dsi.bibliosys.biblioback.data.entity.Usager;
import com.dsi.bibliosys.biblioback.service.entity.UsagerService;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/**
 * Contrôleur REST de l'entité business Usager.
 */
@RestController
@RequestMapping("/usager")
public class UsagerController {

	/**
	 * Service de l'entité business Usager.
	 */
	@Autowired
	private UsagerService usagerService;

	/**
	 * Méthode exécutée à l'appel de l'URI GET "/usager".
	 * 
	 * @return Un Usager vide
	 */
	@GetMapping
	public Mono<Usager> read() {
		return Mono.just(usagerService.create());
	}

	/**
	 * Méthode exécutée à l'appel de l'URI GET "/usager/{id}".
	 * 
	 * @return L'usager avec l'id fournit.
	 */
	@GetMapping("/{id}")
	public ResponseEntity<Mono<Usager>> readId(@PathVariable Integer id) {
		Usager usager = usagerService.findById(id);
		return usager == null ? ResponseEntity.notFound().build() : ResponseEntity.ok(Mono.just(usager));
	}
	
	/**
	 * Méthode exécutée à l'appel de l'URI GET "/usager/all".
	 * 
	 * @return Tous les usagers.
	 */
	@GetMapping("/all")
	public ResponseEntity<Flux<Usager>> readId() {
		List<Usager> usager = usagerService.fi
		return usager == null ? ResponseEntity.notFound().build() : ResponseEntity.ok(Mono.just(usager));
	}

	/**
	 * Méthode exécutée à l'appel de l'URI POST "/usager".
	 * 
	 * @param usager Nouvel usager à créer.
	 * @return Renvoie le code "204 No Content" avec un corps de réponse null si
	 *         l'id de l'usager nouvellement créé est null, sinon renvoie le code
	 *         "201 Created" + l'URI de l'usager nouvellement créé avec un corps de
	 *         réponse null.
	 */
	@PostMapping
	public ResponseEntity<Void> create(@RequestBody Usager usager) {
		Usager usagerSaved = usagerService.save(usager);
		return usagerSaved.getId() == null ? ResponseEntity.noContent().build() : ResponseEntity.created(null).build();
	}

}
